name: Appimage CI Build & Package

on:
  pull_request_target:
    types:
      - closed
    branches:
      - main
  pull_request:
    branches: []
  workflow_dispatch:
    branches:
      - main

jobs:
  changedairecipefiles:
    runs-on: ubuntu-latest
    outputs:
      all: ${{steps.changed-files.outputs.all}}
      airecipes: ${{steps.consolidate.outputs.airecipes}}
    steps:
      - name: Repo checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get all recipe files
        if: (github.event_name == 'workflow_dispatch' && github.event.ref == 'refs/heads/main')
        id: all-files
        run: |
          echo "::set-output name=airecipes::$(find . -iname '*.yml' | grep '^./ai-recipes/.*yml$' | xargs)"

      - name: Get changed files from git
        if: github.event_name != 'workflow_dispatch'
        id: changed-files
        run: |
          list_of_changed_files="$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }}  | grep ^ai-recipes/.*yml$ | xargs)"
          echo "::set-output name=airecipes::$list_of_changed_files"

      - name: Consolidate files
        id: consolidate
        run: |
          list_of_changed_files="$(echo ${{ steps.all-files.outputs.airecipes }} ${{ steps.changed-files.outputs.airecipes }} | xargs)"
          echo "${list_of_changed_files}"
          echo "::set-output name=airecipes::$list_of_changed_files"

  changedairecipes:
    runs-on: ubuntu-latest
    outputs:
      airecipes: ${{steps.changed-files-matrix.outputs.airecipes}}
    needs: changedairecipefiles
    if: needs.changedairecipefiles.outputs.airecipes != ''
    steps:
      - name: Check changes files output
        id: changed-files-matrix
        run: |
          stringified_json=$(echo ${{needs.changedfiles.outputs.airecipes}} | jq -Rnc '{"include": [(input|split(" "))| .[]|{'airecipe': .}]}')
          echo "::set-output name=airecipes::${stringified_json}"

  buildairecipe:
    runs-on: ubuntu-latest
    needs: changedairecipes
    if: needs.changedairecipes.outputs.airecipes != ''
    strategy:
      fail-fast: true
      matrix: "${{fromJson(needs.changedairecipes.outputs.airecipes)}}"
    steps:
      - name: Repo checkout
        uses: actions/checkout@v3
      
      - name: Prepare env
        id: recipe
        run: |
          echo "::set-output name=base_name::$(basename ${{matrix.airecipe}} .yml)"

      - name: Build AppImage
        uses: addnab/docker-run-action@v3
        id: recipe_build
        with:
          image: appimagecrafters/appimage-builder
          options: >
            -v ${{github.workspace}}:/workspace
            --workdir /workspace
          run: |
            trap "rm -rf ${{steps.recipe.outputs.base_name}}" TERM INT HUP EXIT
            mkdir -p ${{steps.recipe.outputs.base_name}}
            cp --parents ${{matrix.airecipe}} ${{steps.recipe.outputs.base_name}}/
            cd ${{steps.recipe.outputs.base_name}} || exit 1
            appimage-builder --skip-test --log ERROR --recipe ${{matrix.airecipe}} && mv *.AppImage /workspace/ || exit 1
            cd /workspace/
            rm -rf ${{steps.recipe.outputs.base_name}}
            sync
      
      - name: Check AppImage existence
        uses: andstor/file-existence-action@v1
        id: check_appimage_file
        with:
          files: "*.AppImage"
      
      - name: AppImage build failed
        if: steps.check_appimage_file.outputs.files_exists == 'false'
        run: exit 1

      - name: Release name
        if: github.event.pull_request.merged == true || (github.event_name == 'workflow_dispatch' && github.event.ref == 'refs/heads/main')
        id: rel
        run: |
          release_name=$(basename ${{matrix.airecipe}} .yml)
          echo "::set-output name=release_name::${release_name}"

      - name: Publish AppImage
        if: github.event.pull_request.merged == true || (github.event_name == 'workflow_dispatch' && github.event.ref == 'refs/heads/main')
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{steps.rel.outputs.release_name}}
          prerelease: true
          title: ${{steps.rel.outputs.release_name}}
          files: |
            *.AppImage
